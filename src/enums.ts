/* eslint-disable @typescript-eslint/naming-convention */
export enum Operators {
  RPAREN = ")",
  RBRACKET = "]",
  RBRACE = "}",
  LPAREN = "(",
  STAR = "*",
  PLUS = "+",
  COMMA = ",",
  MINUS = "-",
  RARROW = "->",
  DOT = ".",
  SLASH = "/",
  COLON = ":",
  SEMI = ";",
  EQUALS = "=",
  LBRACKET = "[",
  LBRACE = "{",
}

export enum Symbols {
  BSLASH = "\\",
  COMMENT = "#",
  PREANNOTATION = "@",
  POSTANNOTATION = "@<",
  QUOTE = '"',
  TRIPLEQUOTE = '"""',
}

export enum Token {
  annotation = "annotation",
  component = "component",
  instance = "instance",
  namespace = "namespace",
  class = "class",
  enum = "enum",
  interface = "interface",
  struct = "struct",
  typeParameter = "typeParameter",
  type = "type",
  parameter = "parameter",
  variable = "variable",
  property = "property",
  enumMember = "enumMember",
  decorator = "decorator",
  event = "event",
  function = "function",
  method = "method",
  macro = "macro",
  label = "label",
  comment = "comment",
  string = "string",
  keyword = "keyword",
  number = "number",
  regexp = "regexp",
  operator = "operator",
  component_kind = "component-kind",
  declaration = "declaration",
  definition = "definition",
  readonly = "readonly",
  static = "static",
  deprecated = "deprecated",
  abstract = "abstract",
  async = "async",
  modification = "modification",
  documentation = "documentation",
  defaultLibrary = "defaultLibrary",
}

export enum Types {
  // Numeric types
  F32 = "variable",
  F64 = "variable",
  I16 = "variable",
  I32 = "variable",
  I64 = "variable",
  I8 = "variable",
  U16 = "variable",
  U32 = "variable",
  U64 = "variable",
  U8 = "variable",
  // Unique types
  constant = "variable",
  bool = "variable",
  array = "variable",
  string = "string",
  struct = "struct",
  enum = "enum",
  // Abstract type
  type = "type",
}

export enum KeywordModifiers {
  active = "component-kind",
  passive = "component-kind",
  queued = "component-kind",
  constant = "readonly",
}

export enum Keywords {
  // FPP types
  module = "namespace",
  component = "component",
  instance = "instance",
  port = "port",
  //
  activity = "",
  always = "",
  assert = "",
  async = "async",
  at = "peroperty",
  base = "parametr",
  block = "property",
  change = "",
  command = "type",
  connections = "event",
  cpu = "operator",
  default = "number",
  diagnostic = "type",
  drop = "type",
  event = "",
  false = "",
  fatal = "type",
  format = "string",
  get = "",
  guarded = "type",
  health = "type",
  high = "type",
  id = "",
  import = "definition",
  include = "definition",
  input = "",
  internal = "declaration",
  locate = "declaration",
  low = "type",
  match = "",
  on = "",
  opcode = "",
  orange = "",
  output = "",
  param = "",
  phase = "",
  priority = "",
  private = "",
  queue = "",
  recv = "",
  red = "",
  ref = "",
  reg = "",
  resp = "",
  save = "",
  serial = "",
  set = "",
  severity = "",
  size = "",
  stack = "",
  sync = "",
  telemetry = "",
  text = "",
  throttle = "",
  time = "",
  topology = "",
  true = "",
  update = "",
  warning = "type",
  with = "",
  yellow = "",
}
